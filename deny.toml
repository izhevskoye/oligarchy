[licenses]
# This section is considered when running `cargo deny check license`
# More documentation for the licenses section can be found here:
# https://github.com/EmbarkStudios/cargo-deny#the-licenses-section

# Uncomment the following line to change the lint level for unlicensed crates
# [possible values: "deny", "allow" or "warn"].
unlicensed = "deny"

# Uncomment the following line to explictly allow certain licenses
# See https://spdx.org/licenses/ for list of possible licenses
# [possible values: any SPDX 3.7 short identifier (+ optional exception)].
allow = [
    "Apache-2.0",
    "Apache-2.0 WITH LLVM-exception",
    "BSD-3-Clause",
    "BSD-2-Clause",
    "0BSD",
    "MIT",
    "Zlib",
    "MPL-2.0",
    "ISC",
    "CC0-1.0",
]

exceptions = [
    { allow = ["LicenseRef-Oligarchy"], name = "oligarchy" },
]

# Uncomment the following line to explictly disallow certain licenses
# See https://spdx.org/licenses/ for list of possible licenses
# [possible values: any SPDX 3.7 short identifier (+ optional exception)].
#deny = []

# Uncomment the following line to change the lint level for licenses considered copyleft
# [possible values: "deny", "allow" or "warn"].
copyleft = "deny"

[[licenses.clarify]]
name = "oligarchy"
version = "*"
expression = "LicenseRef-Oligarchy"
license-files = []

[[licenses.clarify]]
name = "stretch"
version = "*"
expression = "MIT"
license-files = []

# Uncomment the following line to approve or deny OSI-approved or FSF Free/Libre licenses
# [possible values: "both", "either", "osi-only", "fsf-only" or "neither"].
#allow-osi-fsf-free = "neither"

# Uncomment the following line to change the confidence threshold. The higher the value,
# the more closely the license text must be to the canonical license text of a valid
# SPDX license file.
# [possible values: any between 0.0 and 1.0].
#confidence-threshold = 0.8

[bans]
# This section is considered when running `cargo deny check ban`.
# More documentation about the 'bans' section can be found here:
# https://github.com/EmbarkStudios/cargo-deny#crate-bans-cargo-deny-check-ban

# Uncomment the following line to change what happens when multiple versions of the same
# crate are encountered
# [possible values: "deny", "warn" or "allow"].
#multiple-versions = "warn"

# Uncomment the following line to change the highlighting variant used to  multiple versions
# of the same crate when creating a dotgraph of your crates dependencies
# [possible values: "lowest-version", "simplest-path" or "all"].
#highlight = "all"

# Uncomment the following line to allow specific crates.
#allow = []

# Uncomment the following line to deny specific crates.
#deny = []

# Uncomment the following line to skip specific crates.
#skip = []

# Uncomment the following line to skip specific crates (including different versions of the
# same crate down the dependency tree). By default, the depth is infinite, but you can also
# specify `depth = <integer>` to limit it.
#skip-tree = []

[advisories]
vulnerability = "deny"
unmaintained = "deny"
yanked = "deny"
notice = "deny"
ignore = [
  "RUSTSEC-2020-0056",
  "RUSTSEC-2020-0016",
  "RUSTSEC-2021-0047",
  "RUSTSEC-2021-0019",
  "RUSTSEC-2021-0096",
]
